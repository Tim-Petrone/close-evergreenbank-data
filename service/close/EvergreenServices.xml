<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="generate" noun="LoanEstimateIfExists" authenticate="anonymous-all">
        <description>
            Evergreen custom service to generate loan estimate 3 days after the requested date
            Loan Estimate should not be sent after 3 days if the status is Customer Processing (SECA)
        </description>
        <actions>
            <set field="agreementTypeEnumId" value="MkAgrLoanEstimate"/>
            <!--Grab all the orders that the changedDate for their statusId is been 3 days ago
                7 Day period is for down time if occurred to not miss any order-->
            <set field="sevenDaysAgoStart" from="ec.user.nowTimestamp.minus(7).toString().substring(0,10) + ' 12:00:00'"/>
            <set field="threeDaysAgoEnd" from="ec.user.nowTimestamp.minus(2).toString().substring(0,10) + ' 12:00:00'"/>

            <entity-find entity-name="moqui.entity.EntityAuditLog" list="listOfOrderRequested">
                <econdition field-name="changedEntityName" value="mantle.order.OrderHeader"/>
                <econdition field-name="changedFieldName" value="statusId"/>
                <econdition field-name="newValueText" value="OrderRequested"/>
                <econdition field-name="changedDate" operator="greater-equals" from="sevenDaysAgoStart"/>
                <econdition field-name="changedDate" operator="less" from="threeDaysAgoEnd"/>
            </entity-find>

            <set field="orderIdList" from="listOfOrderRequested?.pkPrimaryValue"/>

            <iterate list="orderIdList" entry="orderId">
                <service-call name="close.AgreementServices.check#AgreementExist" in-map="[orderId: orderId, agreementTypeEnumId: agreementTypeEnumId]" out-map="context"/>
                <if condition="!exist">
                    <service-call name="close.agreements.FillablePdfServices.fill#FillablePdf" in-map="[orderId: orderId, agreementTypeEnumId: 'MkAgrLoanEstimate']"/>
                    <service-call name="close.EmailServices.send#OrderStoreEmailAllApplicants" in-map="[
                        orderId:orderId, emailTypeEnumId:'PsetIndirectLoanEstimate', roleTypeIds: ['PrimaryApplicant', 'CoApplicant']
                    ]"/>
                </if>
            </iterate>
        </actions>
    </service>

    <service verb="save" noun="OrderPdfAsAgreement">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="agreementTypeEnumId" default="MkAgrCreditApplication"/>
        </in-parameters>
        <out-parameters>
            <parameter name="agreementId"/>
        </out-parameters>
        <actions>
            <!--Generate new order PDF which is also the ILOS Credit Application-->
            <service-call name="close.OrderServices.save#OrderPdf" in-map="context" out-map="newOrderPdf"/>

            <!--Create Agreement-->
            <service-call name="create#mantle.party.agreement.Agreement"
                          in-map="[
                            agreementTypeEnumId : 'MkAgrCreditApplication',
                            statusId            : 'MkAgreeDraft'
                          ]" out-map="agreement"/>

            <set field="agreementId" from="agreement.agreementId"/>

            <!--Link Agreement to order-->
            <service-call name="create#mantle.order.OrderAgreement"
                          in-map="[
                            orderId     : orderId,
                            agreementId : agreementId
                          ]"/>

            <!--Create an AgreementContent-->
            <service-call name="create#mantle.party.agreement.AgreementContent"
                          in-map="[
                            agreementId        : agreementId,
                            contentLocation    : newOrderPdf.contentLocation,
                            contentTypeEnumId  : 'AcntDocument'
                          ]"/>
        </actions>
    </service>
</services>
